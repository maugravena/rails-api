services:
  api: &api
    build: .
    command: rails s -b 0.0.0.0 -p 3333
    container_name: insurance_api
    volumes:
      - .:/opt/app
    ports:
      - 3333:3333
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - onboarding_net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3333/up || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  sneakers:
    <<: *api
    container_name: sneakers
    command: sh -c "sneakers work CreatePolicyWorker --require app/workers/create_policy_worker.rb"
    depends_on:
      api:
        condition: service_healthy
    ports:
      - 4444:4444
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - onboarding_data:/var/lib/postgressql/data
    networks:
      - onboarding_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 5
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - onboarding_net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "await_startup"]
      interval: 7s

volumes:
  onboarding_data:

networks:
  onboarding_net:
    name: onboarding_net
    external: true
